<?php

namespace OAuth2\Auth;

use Cake\Auth\BaseAuthenticate;
use Cake\Controller\ComponentRegistry;
use Cake\Http\Response;
use Cake\Http\ServerRequest;


class OAuth2Authenticate extends BaseAuthenticate
{

    /**
     * Instance of OAuth2 provider.
     *
     * @var \League\OAuth2\Client\Provider\AbstractProvider
     */
    protected $_provider;


    public function __construct(ComponentRegistry $registry, array $config = [])
    {


        parent::__construct($registry, $config);
    }

    /**
     * @return \League\OAuth2\Client\Provider\GenericProvider
     */
    protected function getProvider()
    {
        $class = $this->getConfig('className');
        return new $class($this->getConfig('options'));
    }


    public function authenticate(ServerRequest $request, Response $response)
    {
        $provider = $this->getProvider();
        $request_data = $request->getData();
        $username = $request_data['username'];
        $password = $request_data['password'];

        try {
            // Try to get an access token using the resource owner password credentials grant.
            $accessToken = $provider->getAccessToken('password', [
                'username' => $username,
                'password' => $password
            ]);

            return $this->_findUser($username);
        } catch (\League\OAuth2\Client\Provider\Exception\IdentityProviderException $e) {
            // Failed to get the access token
            $this->setConfig('authError', $e->getMessage());
            return false;
        }
    }

    public function unauthenticated(ServerRequest $request, Response $response)
    {
        parent::unauthenticated($request, $response); // TODO: Change the autogenerated stub
    }

    public function getUser(ServerRequest $request)
    {
        return parent::getUser($request); // TODO: Change the autogenerated stub
    }
}